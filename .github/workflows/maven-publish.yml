#name: Maven Package & Docker Image
#
#on:
#  push:
#    branches: ["main"]
#  pull_request:
#    branches: ["main"]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          server-id: github
#          settings-path: ${{ github.workspace }}
#
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#
#      # Docker Hub 푸시
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_NAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push to Docker Hub
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: chanchanlee/test2:latest
#
#      # 도커 컨테이너 실행
#      - name: Run Docker container
#        run: |
#          docker run -d --name test2 -p 8080:8080 chanchanlee/test2:latest
#          docker ps -a
#      - name: Test container with curl
#        run: |
#          sleep 5 # 앱이 뜨는 시간 대기
#          curl -v http://localhost:8080




name: Build and Push to GHCR

on:
  push:
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest

      - name: Pull Docker image from GHCR
        run: docker pull ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest

      - name: Run Docker container
        run: docker run -d --name test-ghcr -p 8080:8080 ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest

      - name: Wait for container to be ready
        run: sleep 10

      - name: Test application endpoint
        run: curl -v --retry 10 --retry-delay 3 http://localhost:8080 || exit 1

